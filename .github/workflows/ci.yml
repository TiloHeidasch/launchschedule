name: Lint, Test, Build, Deploy

on:
  push:
  workflow_dispatch:

jobs:
  baptize:
    name: Determine Release Name
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Totemize
        run: npm install --save totemize
      - name: Create Prod Release Name Variable using Totemize
        if: ${{github.ref == 'refs/heads/master'}}
        run: node totemizeProd.ts > version
      - name: Create Beta Release Name Variable using Totemize
        if: ${{github.ref == 'refs/heads/dev'}}
        run: node totemizeBeta.ts > version
      - name: Clean version File
        run: truncate -s -1 version
      - name: Safe Version File Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: version
          path: ./version
  track:
    name: Determine current Track
    runs-on: ubuntu-latest
    steps:
      - name: Write Track to File
        run: echo "development" > track
      - name: Check if master
        if: ${{github.ref == 'refs/heads/master'}}
        run: echo "Prod" > track
      - name: Check if dev
        if: ${{github.ref == 'refs/heads/dev'}}
        run: echo "Beta" > track
      - name: Safe Track File Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: track
          path: ./track
  fetch:
    name: Merge Data
    runs-on: ubuntu-latest
    needs: [fetch1, fetch2, fetch3, fetch4]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Download Launches 0-500
        uses: actions/download-artifact@v2.0.5
        with:
          name: fetch1
          path: src/app/data/
      - name: Download Launches 500-1000
        uses: actions/download-artifact@v2.0.5
        with:
          name: fetch2
          path: src/app/data/
      - name: Download Launches 1000-1500
        uses: actions/download-artifact@v2.0.5
        with:
          name: fetch3
          path: src/app/data/
      - name: Download Launches 1500-2000
        uses: actions/download-artifact@v2.0.5
        with:
          name: fetch4
          path: src/app/data/
      - name: Merge Launches
        run: node mergeLaunches.ts 2000 500
      - name: Safe Data Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: data
          path: src/app/data/
  fetch1:
    name: Fetch Launches 0-500
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Fetch Launches
        run: node fetchLaunches.ts 0 500
      - name: Safe Data Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: fetch1
          path: src/app/data/
  fetch2:
    name: Fetch Launches 500-1000
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Fetch Launches
        run: node fetchLaunches.ts 500 500
      - name: Safe Data Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: fetch2
          path: src/app/data/
  fetch3:
    name: Fetch Launches 1000-1500
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Fetch Launches
        run: node fetchLaunches.ts 1000 500
      - name: Safe Data Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: fetch3
          path: src/app/data/
  fetch4:
    name: Fetch Launches 1500-2000
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Fetch Launches
        run: node fetchLaunches.ts 1500 500
      - name: Safe Data Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: fetch4
          path: src/app/data/
  build:
    name: Build Web & Android
    runs-on: ubuntu-latest
    needs: [fetch, baptize, track]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Download Version
        uses: actions/download-artifact@v2.0.5
        with:
          name: version
          path: ./
      - name: Set Release Name Variable
        run: echo "RELEASE_NAME=`cat ./version`" >> $GITHUB_ENV
      - name: Download Track
        uses: actions/download-artifact@v2.0.5
        with:
          name: track
          path: ./
      - name: Set Release Track Variable
        run: echo "RELEASE_NAME=`cat ./track`" >> $GITHUB_ENV
      - name: Setup Environment File
        run: sed -i 's/};/versionCode:${{ github.run_number }},\n versionName:"${{ env.RELEASE_NAME }}",\n track:"${{ env.RELEASE_TRACK }}"\n};/g' src/environments/environment.prod.ts
      - name: Check Environment File
        run: cat src/environments/environment.prod.ts
      - name: Download Launches
        uses: actions/download-artifact@v2.0.5
        with:
          name: data
          path: src/app/data/
      - name: Build with Ionic
        run: npm run build:prod
      - name: Capacitor Update
        run: npx cap update android
      - name: Capacitor Copy
        run: npx cap copy
      - name: Safe www Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: www
          path: www/
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Gradle
        run: cd android && chmod +x gradlew && ./gradlew bundleRelease
      - name: Safe Unsigned Release Bundle Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: app-bundle-unsigned
          path: android/app/build/outputs/bundle/release/app-release.aab
  sign:
    name: Sign Android Artifact
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Unsigned Release Bundle Artifact
        uses: actions/download-artifact@v2.0.5
        with:
          name: app-bundle-unsigned
          path: ./
      - name: Sign Bundle
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      - name: Safe Signed Release Bundle Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: app-bundle-signed
          path: ./app-release.aab
  releaseProd:
    name: Upload to Google Play Production
    runs-on: ubuntu-latest
    needs: [sign, lint, test]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download Signed Release Bundle Artifact
        uses: actions/download-artifact@v2.0.5
        with:
          name: app-bundle-signed
          path: ./
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1.0.4
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: de.th105.launchschedule
          releaseFile: ./app-release.aab
  releaseDev:
    name: Upload to Google Play Beta
    runs-on: ubuntu-latest
    needs: [sign, test]
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Download Signed Release Bundle Artifact
        uses: actions/download-artifact@v2.0.5
        with:
          name: app-bundle-signed
          path: ./
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1.0.4
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: de.th105.launchschedule
          releaseFile: ./app-release.aab
          track: beta
  dockerProd:
    name: Build and Push docker latest
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download www
        uses: actions/download-artifact@v2.0.5
        with:
          name: www
          path: www/
      - name: Build and Push the Dockerfile
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: theidasch/schedule
          tags: latest
  dockerDev:
    name: Build and Push docker dev
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download www
        uses: actions/download-artifact@v2.0.5
        with:
          name: www
          path: www/
      - name: Build and Push the Dockerfile
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: theidasch/schedule
          tags: dev
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Run Lint
        run: npm run lint
  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: fetch
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Download Launches
        uses: actions/download-artifact@v2.0.5
        with:
          name: data
          path: src/app/data/
      - name: Run Test
        run: npm run test
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: fetch
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Download Launches
        uses: actions/download-artifact@v2.0.5
        with:
          name: data
          path: src/app/data/
      - name: Run Test
        run: npm run e2e
  tagDev:
    name: Tag this run
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    needs: [dockerDev, releaseDev]
    steps:
      - name: Download Version
        uses: actions/download-artifact@v2.0.5
        with:
          name: version
          path: ./
      - name: Set Release Name Variable
        run: echo "RELEASE_NAME=`cat ./version`" >> $GITHUB_ENV
      - name: Update Tag
        uses: richardsimko/update-tag@v1.0.3
        with:
          tag_name: ${{ env.RELEASE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  tagProd:
    name: Tag this run
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    needs: [dockerProd, releaseProd]
    steps:
      - name: Download Version
        uses: actions/download-artifact@v2.0.5
        with:
          name: version
          path: ./
      - name: Set Release Name Variable
        run: echo "RELEASE_NAME=`cat ./version`" >> $GITHUB_ENV
      - name: Update Tag
        uses: richardsimko/update-tag@v1.0.3
        with:
          tag_name: ${{ env.RELEASE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
