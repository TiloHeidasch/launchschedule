name: Lint, Test, Build, Deploy

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '08 15 */7 * *'
  push:
  workflow_dispatch:

jobs:
  baptize:
    name: Determine Release Name
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Setup Totemize
        if: ${{github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'}}
        run: npm install --save totemize
      - name: Write Development to File
        run: echo "development " > version
      - name: Create Prod Release Name Variable using Totemize
        if: ${{github.ref == 'refs/heads/master'}}
        run: node scripts/totemizeProd.ts > version
      - name: Create Beta Release Name Variable using Totemize
        if: ${{github.ref == 'refs/heads/dev'}}
        run: node scripts/totemizeBeta.ts > version
      - name: Clean version File
        run: truncate -s -1 version
      - name: Safe Version File Artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: ./version
  track:
    name: Determine current Track
    runs-on: ubuntu-latest
    steps:
      - name: Write Track to File
        run: echo "development" > track
      - name: Check if master
        if: ${{github.ref == 'refs/heads/master'}}
        run: echo "Prod" > track
      - name: Check if dev
        if: ${{github.ref == 'refs/heads/dev'}}
        run: echo "Beta" > track
      - name: Safe Track File Artifact
        uses: actions/upload-artifact@v4
        with:
          name: track
          path: ./track
  build:
    name: Build Web & Android
    runs-on: ubuntu-latest
    needs:
      [ baptize,
        track,
      ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: NPM Install
        run: npm ci
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: Download Version
        uses: actions/download-artifact@v4
        with:
          name: version
          path: ./
      - name: Set Release Name Variable
        run: echo "RELEASE_NAME=`cat ./version`" >> $GITHUB_ENV
      - name: Download Track
        uses: actions/download-artifact@v4
        with:
          name: track
          path: ./
      - name: Set Release Track Variable
        run: echo "RELEASE_TRACK=`cat ./track`" >> $GITHUB_ENV
      - name: Setup Environment File
        run: sed -i 's/};/versionCode:${{ github.run_number }},\n versionName:"${{ env.RELEASE_NAME }}",\n track:"${{ env.RELEASE_TRACK }}"\n};/g' src/environments/environment.prod.ts
      - name: Check Environment File
        run: cat src/environments/environment.prod.ts
      - name: Download Masterdata
        run: wget https://github.com/TiloHeidasch/launchschedule/archive/refs/heads/masterdata.zip
      - name: Unzip Masterdata
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./masterdata.zip -d ./src/app/data/
      - name: Copy Masterdata
        run: sudo cp ./src/app/data/launchschedule-masterdata/* ./src/app/data/
      - name: Build with Ionic
        run: npm run build:prod
      - name: tar www Artifact
        run: tar -cvf www.tar www/
      - name: Safe www Artifact
        uses: actions/upload-artifact@v4
        with:
          name: www
          path: www.tar
      - name: Capacitor Sync
        run: npx cap sync
      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '11'
      - name: Build App Bundle with Gradle
        run: cd android && chmod +x gradlew && ./gradlew bundleRelease
      - name: Safe Unsigned Release Bundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-bundle-unsigned
          path: android/app/build/outputs/bundle/release/app-release.aab
      - name: Build APK with Gradle
        run: cd android && chmod +x gradlew && ./gradlew assembleRelease
      - name: Safe Unsigned Release APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned
          path: android/app/build/outputs/apk/release/app-release-unsigned.apk
  signBundle:
    name: Sign Android Bundle
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - name: Download Unsigned Release Bundle Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-bundle-unsigned
          path: ./
      - name: Sign Bundle
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
      - name: Safe Signed Release Bundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-bundle-signed
          path: ./app-release.aab
  signApk:
    name: Sign Android APK
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - name: Download Unsigned Release Bundle Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-unsigned
          path: ./
      - name: Sign Bundle
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      - name: Safe Signed Release Bundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed
          path: ./app-release-unsigned-signed.apk
  release:
    name: Upload to Google Play
    runs-on: ubuntu-latest
    needs: [signBundle,signApk]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - name: Download Signed Release Bundle Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-bundle-signed
          path: ./
      - name: Upload to Google Play Prod
        uses: r0adkll/upload-google-play@v1.0.12
        if: github.ref == 'refs/heads/master'
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: de.th105.launchschedule
          releaseFiles: ./app-release.aab
      - name: Upload to Google Play Beta
        uses: r0adkll/upload-google-play@v1.0.12
        if: ${{github.ref == 'refs/heads/dev'}}
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: de.th105.launchschedule
          releaseFiles: ./app-release.aab
          track: beta
  pages:
    name: Create Github Page
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download www
      uses: actions/download-artifact@v2.0.5
      with:
        name: www
        path: ./
    - name: Untar www
      run: tar -xvf www.tar
    - name: Check Basepath in index.html
      run: cat www/index.html
    - name: Change Basepath in index.html
      run: sed -i 's/<base href="\/">/<base href="\/launchschedule\/">/g' www/index.html
    - name: Check Basepath in index.html
      run: cat www/index.html
    - name: GitHub Pages
      uses: crazy-max/ghaction-github-pages@v2.3.0
      with:
        build_dir: www/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: Run Lint
        run: npm run lint
  test:
    name: Tests
    runs-on: ubuntu-latest
    needs:
      [baptize, track]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: NPM Install
        run: npm ci
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: Download Masterdata
        run: wget https://github.com/TiloHeidasch/launchschedule/archive/refs/heads/masterdata.zip
      - name: Unzip Masterdata
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./masterdata.zip -d ./src/app/data/
      - name: Copy Masterdata
        run: sudo cp ./src/app/data/launchschedule-masterdata/* ./src/app/data/
      - name: Run Test
        run: npm run test
  tag:
    name: Tag this run
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    needs: [release]
    steps:
      - name: Download Version
        uses: actions/download-artifact@v4
        with:
          name: version
          path: ./
      - name: Set Release Name Variable
        run: echo "RELEASE_NAME=`cat ./version`" >> $GITHUB_ENV
      - name: Update Tag
        uses: richardsimko/update-tag@v1.0.3
        with:
          tag_name: ${{ env.RELEASE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
