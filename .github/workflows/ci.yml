name: Lint, Test, Build, Deploy

on:
  push:
  workflow_dispatch:

jobs:
  baptize:
    name: Determine Release Name
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Totemize
        run: npm install --save totemize
      - name: Write Development to File
        run: echo "development " > version
      - name: Create Prod Release Name Variable using Totemize
        if: ${{github.ref == 'refs/heads/master'}}
        run: node scripts/totemizeProd.ts > version
      - name: Create Beta Release Name Variable using Totemize
        if: ${{github.ref == 'refs/heads/dev'}}
        run: node scripts/totemizeBeta.ts > version
      - name: Clean version File
        run: truncate -s -1 version
      - name: Safe Version File Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: version
          path: ./version
  track:
    name: Determine current Track
    runs-on: ubuntu-latest
    steps:
      - name: Write Track to File
        run: echo "development" > track
      - name: Check if master
        if: ${{github.ref == 'refs/heads/master'}}
        run: echo "Prod" > track
      - name: Check if dev
        if: ${{github.ref == 'refs/heads/dev'}}
        run: echo "Beta" > track
      - name: Safe Track File Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: track
          path: ./track
  buildWeb:
    name: Build Web
    runs-on: ubuntu-latest
    needs:
      [ baptize,
        track,
      ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Download Version
        uses: actions/download-artifact@v2.0.9
        with:
          name: version
          path: ./
      - name: Set Release Name Variable
        run: echo "RELEASE_NAME=`cat ./version`" >> $GITHUB_ENV
      - name: Download Track
        uses: actions/download-artifact@v2.0.9
        with:
          name: track
          path: ./
      - name: Set Release Track Variable
        run: echo "RELEASE_TRACK=`cat ./track`" >> $GITHUB_ENV
      - name: Setup Environment File
        run: sed -i 's/};/versionCode:${{ github.run_number }},\n versionName:"${{ env.RELEASE_NAME }}",\n track:"${{ env.RELEASE_TRACK }}"\n};/g' src/environments/environment.prod.ts
      - name: Check Environment File
        run: cat src/environments/environment.prod.ts
      - name: Download Masterdata
        run: wget https://github.com/TiloHeidasch/launchschedule/archive/refs/heads/masterdata.zip
      - name: Unzip Masterdata
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./masterdata.zip -d ./src/app/data/
      - name: Copy Masterdata
        run: sudo cp ./src/app/data/launchschedule-masterdata/* ./src/app/data/
      - name: Use PWA angular.json
        run: rm angular.json && mv angular.pwa.json angular.json
      - name: Use PWA index.html
        run: rm src/index.html && mv src/index.pwa.html src/index.html
      - name: Use PWA app.module.ts
        run: rm src/app/app.module.ts && mv src/app/app.pwa.module.ts src/app/app.module.ts
      - name: Build with Ionic
        run: npm run build:prod
      - name: Safe www Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: www
          path: www/
  buildAndroid:
    name: Build Web & Android
    runs-on: ubuntu-latest
    needs:
      [ baptize,
        track,
      ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Download Version
        uses: actions/download-artifact@v2.0.9
        with:
          name: version
          path: ./
      - name: Set Release Name Variable
        run: echo "RELEASE_NAME=`cat ./version`" >> $GITHUB_ENV
      - name: Download Track
        uses: actions/download-artifact@v2.0.9
        with:
          name: track
          path: ./
      - name: Set Release Track Variable
        run: echo "RELEASE_TRACK=`cat ./track`" >> $GITHUB_ENV
      - name: Setup Environment File
        run: sed -i 's/};/versionCode:${{ github.run_number }},\n versionName:"${{ env.RELEASE_NAME }}",\n track:"${{ env.RELEASE_TRACK }}"\n};/g' src/environments/environment.prod.ts
      - name: Check Environment File
        run: cat src/environments/environment.prod.ts
      - name: Download Masterdata
        run: wget https://github.com/TiloHeidasch/launchschedule/archive/refs/heads/masterdata.zip
      - name: Unzip Masterdata
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./masterdata.zip -d ./src/app/data/
      - name: Copy Masterdata
        run: sudo cp ./src/app/data/launchschedule-masterdata/* ./src/app/data/
      - name: Remove PWA related files
        run: rm angular.pwa.json ngsw-config.json src/manifest.webmanifest src/index.pwa.html src/app/app.pwa.module.ts
      - name: Build with Ionic
        run: npm run build:prod
      - name: Capacitor Update
        run: npx cap update android
      - name: Capacitor Copy
        run: npx cap copy
      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '11'
      - name: Build with Gradle
        run: cd android && chmod +x gradlew && ./gradlew bundleRelease
      - name: Safe Unsigned Release Bundle Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: app-bundle-unsigned
          path: android/app/build/outputs/bundle/release/app-release.aab
  sign:
    name: Sign Android Artifact
    runs-on: ubuntu-latest
    needs: [buildAndroid, test, e2e]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - name: Download Unsigned Release Bundle Artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: app-bundle-unsigned
          path: ./
      - name: Sign Bundle
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      - name: Safe Signed Release Bundle Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: app-bundle-signed
          path: ./app-release.aab
  release:
    name: Upload to Google Play
    runs-on: ubuntu-latest
    needs: [sign]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - name: Download Signed Release Bundle Artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: app-bundle-signed
          path: ./
      - name: Upload to Google Play Prod
        uses: r0adkll/upload-google-play@v1.0.12
        if: github.ref == 'refs/heads/master'
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: de.th105.launchschedule
          releaseFiles: ./app-release.aab
      - name: Upload to Google Play Beta
        uses: r0adkll/upload-google-play@v1.0.12
        if: ${{github.ref == 'refs/heads/dev'}}
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: de.th105.launchschedule
          releaseFiles: ./app-release.aab
          track: beta
  pages:
    name: Create Github Page
    runs-on: ubuntu-latest
    needs: [buildWeb, test, e2e]
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download www
      uses: actions/download-artifact@v2.0.5
      with:
        name: www
        path: www/
    - name: Check Basepath in index.html
      run: cat www/index.html
    - name: Change Basepath in index.html
      run: sed -i 's/<base href="\/">/<base href="\/launchschedule\/">/g' www/index.html
    - name: Check Basepath in index.html
      run: cat www/index.html
    - name: GitHub Pages
      uses: crazy-max/ghaction-github-pages@v2.3.0
      with:
        build_dir: www/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: Build and Push docker
    runs-on: ubuntu-latest
    needs: [buildWeb, test, e2e]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download www
        uses: actions/download-artifact@v2.0.9
        with:
          name: www
          path: www/
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push the Dockerfile Latest
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/master'
        with:
          context: .
          pull: true
          push: true    
          cache-from: type=registry,ref=theidasch/schedule:latest
          cache-to: type=inline
          tags: theidasch/schedule:latest
      - name: Build and Push the Dockerfile Dev
        uses: docker/build-push-action@v2
        if: ${{github.ref == 'refs/heads/dev'}}
        with:
          context: .
          pull: true
          push: true    
          cache-from: type=registry,ref=theidasch/schedule:dev
          cache-to: type=inline
          tags: theidasch/schedule:dev
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Run Lint
        run: npm run lint
  test:
    name: Tests
    runs-on: ubuntu-latest
    needs:
      [baptize, track]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Download Masterdata
        run: wget https://github.com/TiloHeidasch/launchschedule/archive/refs/heads/masterdata.zip
      - name: Unzip Masterdata
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./masterdata.zip -d ./src/app/data/
      - name: Copy Masterdata
        run: sudo cp ./src/app/data/launchschedule-masterdata/* ./src/app/data/
      - name: Run Test
        run: npm run test
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs:
      [baptize, track]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Setup Angular
        run: npm install @angular/cli
      - name: Setup Ionic
        run: npm install @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Download Masterdata
        run: wget https://github.com/TiloHeidasch/launchschedule/archive/refs/heads/masterdata.zip
      - name: Unzip Masterdata
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./masterdata.zip -d ./src/app/data/
      - name: Copy Masterdata
        run: sudo cp ./src/app/data/launchschedule-masterdata/* ./src/app/data/
      - name: Run Test
        run: npm run e2e
  # pixel2xl:
  #   name: Screenshots Pixel 2 XL
  #   runs-on: ubuntu-latest
  #   needs:
  #     [ baptize,
  #       track,
  #     ]
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup Node
  #       uses: actions/setup-node@v2.1.2
  #     - name: Setup Angular
  #       run: npm install @angular/cli
  #     - name: Setup Ionic
  #       run: npm install @ionic/cli
  #     - name: NPM Install
  #       run: npm install
  #     - name: Download Masterdata
  #       run: wget https://github.com/TiloHeidasch/launchschedule/archive/refs/heads/masterdata.zip
  #     - name: Unzip Masterdata
  #       uses: TonyBogdanov/zip@1.0
  #       with:
  #         args: unzip -qq ./masterdata.zip -d ./src/app/data/
  #     - name: Copy Masterdata
  #       run: sudo cp ./src/app/data/launchschedule-masterdata/* ./src/app/data/
  #     - name: Take Screenshots
  #       run: npm run screenshots:pixel2xl
  #     - name: Safe Screenshots
  #       if: always()
  #       uses: actions/upload-artifact@v2.2.3
  #       with:
  #         name: screenshots_pixel2xl
  #         path: ./screenshots/images
  # nexus7:
  #   name: Screenshots Nexus 7
  #   runs-on: ubuntu-latest
  #   needs:
  #     [ baptize,
  #       track,
  #     ]
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup Node
  #       uses: actions/setup-node@v2.1.2
  #     - name: Setup Angular
  #       run: npm install @angular/cli
  #     - name: Setup Ionic
  #       run: npm install @ionic/cli
  #     - name: NPM Install
  #       run: npm install
  #     - name: Download Masterdata
  #       run: wget https://github.com/TiloHeidasch/launchschedule/archive/refs/heads/masterdata.zip
  #     - name: Unzip Masterdata
  #       uses: TonyBogdanov/zip@1.0
  #       with:
  #         args: unzip -qq ./masterdata.zip -d ./src/app/data/
  #     - name: Copy Masterdata
  #       run: sudo cp ./src/app/data/launchschedule-masterdata/* ./src/app/data/
  #     - name: Take Screenshots
  #       run: npm run screenshots:nexus7
  #     - name: Safe Screenshots
  #       if: always()
  #       uses: actions/upload-artifact@v2.2.3
  #       with:
  #         name: screenshots_nexus7
  #         path: ./screenshots/images
  # nexus10:
  #   name: Screenshots Nexus 10
  #   runs-on: ubuntu-latest
  #   needs:
  #     [ baptize,
  #       track,
  #     ]
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup Node
  #       uses: actions/setup-node@v2.1.2
  #     - name: Setup Angular
  #       run: npm install @angular/cli
  #     - name: Setup Ionic
  #       run: npm install @ionic/cli
  #     - name: NPM Install
  #       run: npm install
  #     - name: Download Masterdata
  #       run: wget https://github.com/TiloHeidasch/launchschedule/archive/refs/heads/masterdata.zip
  #     - name: Unzip Masterdata
  #       uses: TonyBogdanov/zip@1.0
  #       with:
  #         args: unzip -qq ./masterdata.zip -d ./src/app/data/
  #     - name: Copy Masterdata
  #       run: sudo cp ./src/app/data/launchschedule-masterdata/* ./src/app/data/
  #     - name: Take Screenshots
  #       run: npm run screenshots:nexus10
  #     - name: Safe Screenshots
  #       if: always()
  #       uses: actions/upload-artifact@v2.2.3
  #       with:
  #         name: screenshots_nexus10
  #         path: ./screenshots/images
  tag:
    name: Tag this run
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    needs: [release]
    steps:
      - name: Download Version
        uses: actions/download-artifact@v2.0.9
        with:
          name: version
          path: ./
      - name: Set Release Name Variable
        run: echo "RELEASE_NAME=`cat ./version`" >> $GITHUB_ENV
      - name: Update Tag
        uses: richardsimko/update-tag@v1.0.3
        with:
          tag_name: ${{ env.RELEASE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
